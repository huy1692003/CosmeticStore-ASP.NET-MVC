@model BanMyPham.Models.DonNhapHang
@{
	ViewData["Title"] = "Tạo đơn nhập hàng";
	Layout = "~/Views/Shared/_layoutAdmin.cshtml";
}

<div class="">
	<div class="">
		<div class="card-header">
			<h4 class="m-0 font-weight-bold text-primary text-center">Tạo đơn nhập hàng mới</h4>
		</div>
		<div class="card-body">
			<form id="donNhapHangForm">
				<div class="row" style="margin-bottom: 40px;">
					<div class="col-md-6">
						<div class="form-group">
							<label class="font-weight-bold">Mã đơn nhập</label>
							<input name="MaDN" class="form-control" required />
						</div>
					</div>
					<div class="col-md-6">
						<div class="form-group">
							<label class="font-weight-bold">Ngày nhập</label>
							<input name="NgayNhap" type="datetime-local" class="form-control" required value="@DateTime.Now.ToString("yyyy-MM-ddTHH:mm")" />
						</div>
					</div>
				</div>

				<hr />
				<div class="d-flex justify-content-between align-items-center mb-3">
					<h4 class="font-weight-bold text-primary mb-0"></h4>
					<div class="btn-group" role="group">
						<button type="button" class="btn btn-primary" onclick="toggleNewProduct()">
							<i class="fas fa-plus"></i> Thêm sản phẩm mới
						</button>
						<button type="button" class="btn btn-success active" onclick="toggleExistingProduct()">
							<i class="fas fa-list"></i> Chọn sản phẩm có sẵn
						</button>
					</div>
				</div>

				<!-- Form nhập sản phẩm mới -->
				<div id="newProductForm" style="display:none;">
					<div class="card">
						<div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
							<h5 class="mb-0 ">Thêm sản phẩm mới</h5>
							<button type="button" class="btn btn-light text-primary" onclick="validateAndAddNewProduct()">
								<i class="fas fa-plus"></i> Thêm vào đơn
							</button>
						</div>
						<div class="card-body">
							<div class="row">
								<div class="col-md-6">
									<div class="form-group">
										<label>Mã sản phẩm</label>
										<input id="newMaSP" class="form-control" />
									</div>
									<div class="form-group">
										<label>Tên sản phẩm</label>
										<input id="newTenSP" class="form-control" />
									</div>
									<div class="form-group">
										<label>Số lượng Nhập</label>
										<input id="newSoLuong" type="number" class="form-control" />
									</div>
									<div class="form-group">
										<label>Giá nhập sản phẩm</label>
										<input id="newGiaNhap" type="number" class="form-control" />
									</div>
									<div class="form-group">
										<label>Giá bán ra </label>
										<input id="newNguyenGia" type="number" class="form-control" />
									</div>
									<div class="form-group">
										<label>Chi nhánh</label>
										<select id="newChiNhanh" class="form-control">
											<option value="">-- Chọn chi nhánh --</option>
											@foreach (var cn in ViewBag.ChiNhanh)
											{
												<option value="@cn.MaChiNhanh">@cn.TenChiNhanh</option>
											}
										</select>
									</div>
								</div>
								<div class="col-md-6">
									<div class="form-group">
										<label>Thương hiệu</label>
										<select id="newThuongHieu" class="form-control">
											<option value="">-- Chọn thương hiệu --</option>
											@foreach (var th in ViewBag.ThuongHieu)
											{
												<option value="@th.MaThuongHieu">@th.TenThuongHieu</option>
											}
										</select>
									</div>
									<div class="form-group">
										<label>Thông tin sản phẩm</label>
										<textarea id="newThongTin" class="form-control" rows="3"></textarea>
									</div>
									<div class="form-group">
										<label>Công dụng sản phẩm</label>
										<textarea id="newCongDung" class="form-control" rows="3"></textarea>
									</div>
									<div class="form-group">
										<label>Thành phần sản phẩm</label>
										<textarea id="newThanhPhan" class="form-control" rows="3"></textarea>
									</div>
									<div class="form-group">
										<label>Hướng dẫn sử dụng</label>
										<textarea id="newHuongDan" class="form-control" rows="3"></textarea>
									</div>
									<div class="form-group">
										<label>Xuất xứ</label>
										<input id="newXuatXu" class="form-control" />
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>

				<!-- Form chọn sản phẩm có sẵn -->
				<div id="existingProductForm">
					<div class="card">
						<div class="card-header bg-success text-white d-flex justify-content-between align-items-center">
							<h5 class="mb-0 ">Chọn sản phẩm có sẵn</h5>
							<button type="button" class="btn btn-light text-success" onclick="validateAndAddExistingProduct()">
								<i class="fas fa-plus"></i> Thêm vào đơn
							</button>
						</div>
						<div class="card-body">
							<div class="row">
								<div class="col-md-6">
									<div class="form-group">
										<label>Sản phẩm</label>
										<select id="existingMaSP" class="form-control select2">
											<option value="">-- Chọn sản phẩm --</option>
											@foreach (var sp in ViewBag.SanPham)
											{
												<option value="@sp.MaSanPham" data-ten="@sp.TenSanPham">[@sp.MaSanPham] - @sp.TenSanPham - Tồn kho : @sp.SoLuong</option>
											}
										</select>
									</div>
								</div>
								<div class="col-md-2">
									<div class="form-group">
										<label>Số lượng nhập</label>
										<input id="existingSoLuong" type="number" class="form-control" />
									</div>
								</div>
								<div class="col-md-2">
									<div class="form-group">
										<label>Giá nhập</label>
										<input id="existingGiaNhap" type="number" class="form-control" />
									</div>
								</div>
								<div class="col-md-2">
									<div class="form-group">
										<label>Chi nhánh</label>
										<select id="existingChiNhanh" class="form-control">
											<option value="">-- Chọn chi nhánh --</option>
											@foreach (var cn in ViewBag.ChiNhanh)
											{
												<option value="@cn.MaChiNhanh">@cn.TenChiNhanh</option>
											}
										</select>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>

				<!-- Danh sách sản phẩm đã chọn -->
				<div id="selectedProducts" class="mt-4 mb-3">
					<div class="d-flex justify-content-between align-items-center mb-2">
						<h5 class="font-weight-bold mb-0">Sản phẩm đã chọn</h5>
					</div>
					<div class="table-responsive">
						<table class="table table-bordered table-hover">
							<thead class="thead-light">
								<tr>
									<th>Mã SP</th>
									<th>Tên SP</th>
									<th>Số lượng</th>
									<th>Giá nhập</th>
									<th>Chi nhánh</th>
									<th>Tổng tiền</th>
									<th>Thao tác</th>
								</tr>
							</thead>
							<tbody id="selectedProductsList">
							</tbody>
						</table>
					</div>
				</div>

				<div class="d-flex justify-content-between align-items-center mt-4">
					<a asp-action="Index" class="btn btn-secondary btn-lg">
						<i class="fas fa-arrow-left"></i> Quay lại
					</a>
					<button type="button" class="btn btn-primary btn-lg" onclick="validateAndSubmitForm()">
						<i class="fas fa-save"></i> Tạo đơn nhập
					</button>
				</div>
			</form>
		</div>
	</div>
</div>

@section Scripts {
	<link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
	<script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>

	<script>
		$(document).ready(function() {
			// Khởi tạo Select2
			$('.select2').select2({
				placeholder: "Tìm kiếm sản phẩm...",
				allowClear: true
			});

			// Mặc định hiển thị form sản phẩm có sẵn

		// Mặc định hiển thị form sản phẩm có sẵn
			$('#newProductForm').hide();
			$('#existingProductForm').show();

			// Khởi tạo mã HDN (tạo từ C#)
			var maHDN = '@("HDN" + DateTime.Now.ToString("yyyyMMddHHmmss"))';

			// Gán giá trị cho input
			$('input[name="MaDN"]').val(maHDN);
			});

		let selectedProducts = [];

		function toggleNewProduct() {
			$('#newProductForm').show();
			$('#existingProductForm').hide();
		}

		function toggleExistingProduct() {
			$('#existingProductForm').show();
			$('#newProductForm').hide();
		}

		function validateAndAddNewProduct() {
			// Validate required fields
			if (!$('#newMaSP').val() || !$('#newTenSP').val() || !$('#newThuongHieu').val() || !$('#newChiNhanh').val()) {
				alert('Vui lòng điền đầy đủ thông tin bắt buộc (Mã SP, Tên SP, Thương hiệu, Chi nhánh)');
				return;
			}

			// Validate mã SP format
			const maSPRegex = /^[A-Za-z0-9]{3,10}$/;
			if (!maSPRegex.test($('#newMaSP').val())) {
				alert('Mã sản phẩm phải từ 3-10 ký tự và chỉ chứa chữ cái và số');
				return;
			}
			  // Kiểm tra mã sản phẩm đã có trong danh sách bảng chưa
			const maSP = $('#newMaSP').val();
			if (isProductAlreadyInTable(maSP)) {
				alert('Mã sản phẩm này đã tồn tại trong danh sách. Vui lòng chọn mã khác.');
				return;
			}
			
			// Validate số lượng và giá
			const soLuong = parseInt($('#newSoLuong').val());
			const giaNhap = parseFloat($('#newGiaNhap').val());
			const nguyenGia = parseFloat($('#newNguyenGia').val());

			if (!soLuong || soLuong < 1) {
				alert('Số lượng phải lớn hơn 0');
				return;
			}

			if (!giaNhap || giaNhap < 1000) {
				alert('Giá nhập phải lớn hơn 1,000');
				return;
			}

			if (!nguyenGia || nguyenGia < 1000) {
				alert('Nguyên giá phải lớn hơn 1,000');
				return;
			}

			// Validate text length
			if ($('#newThongTin').val().length < 10) {
				alert('Thông tin sản phẩm phải có ít nhất 10 ký tự');
				return;
			}

			const product = {
				type: 'new',
				maSP: $('#newMaSP').val(),
				tenSP: $('#newTenSP').val(),
				soLuong: soLuong,
				giaNhap: giaNhap,
				nguyenGia: nguyenGia,
				maThuongHieu: $('#newThuongHieu').val(),
				maChiNhanh: $('#newChiNhanh').val(),
				thongTin: $('#newThongTin').val(),
				congDung: $('#newCongDung').val(),
				thanhPhan: $('#newThanhPhan').val(),
				huongDan: $('#newHuongDan').val(),
				xuatXu: $('#newXuatXu').val()
			};

			selectedProducts.push(product);
			updateProductTable();
			clearNewProductForm();
		}

		function validateAndAddExistingProduct() {
			// Validate required fields
			if (!$('#existingMaSP').val() || !$('#existingChiNhanh').val()) {
				alert('Vui lòng chọn sản phẩm và chi nhánh');
				return;
			}

			const soLuong = parseInt($('#existingSoLuong').val());
			const giaNhap = parseFloat($('#existingGiaNhap').val());

			if (!soLuong || soLuong < 1) {
				alert('Số lượng phải lớn hơn 0');
				return;
			}

			if (!giaNhap || giaNhap < 1000) {
				alert('Giá nhập phải lớn hơn 1,000');
				return;
			}

			const select = $('#existingMaSP')[0];

			if (isProductAlreadyInTable(select.value)) {
			alert('Mã sản phẩm này đã tồn tại trong danh sách. Vui lòng chọn mã khác.');
			return;
		}
			const product = {
				type: 'existing',
				maSP: select.value,
				tenSP: select.options[select.selectedIndex].dataset.ten,
				soLuong: soLuong,
				giaNhap: giaNhap,
				maChiNhanh: $('#existingChiNhanh').val()
			};

			selectedProducts.push(product);
			updateProductTable();
			clearExistingProductForm();
			console.log(selectedProducts)
		}

		function removeProduct(index) {
			selectedProducts.splice(index, 1);
			updateProductTable();
		}

		function isProductAlreadyInTable(maSP) {
			let exists = false;
			$('#selectedProductsList tr').each(function() {
				const currentRowMaSP = $(this).find('td').eq(0).text();  // Lấy mã SP trong cột đầu tiên
				if (currentRowMaSP === maSP) {
					exists = true;
					return false;  // Dừng vòng lặp khi tìm thấy trùng mã
				}
			});
			return exists;
		}

		function updateProductTable() {
			const tbody = $('#selectedProductsList');
			tbody.empty();

			selectedProducts.forEach((product, index) => {
				const tongTien = product.soLuong * product.giaNhap;
				const chiNhanhText = $(`#${product.type === 'new' ? 'new' : 'existing'}ChiNhanh option[value='${product.maChiNhanh}']`).text();
				tbody.append(`
					<tr>
						<td>${product.maSP}</td>
						<td>[${product.maSP}] - ${product.tenSP}</td>
						<td>${product.soLuong}</td>
						<td>${product.giaNhap.toLocaleString('vi-VN')}</td>
						<td>${chiNhanhText}</td>
						<td>${tongTien.toLocaleString('vi-VN')}</td>
						<td>
							<button type="button" class="btn btn-danger btn-sm" onclick="removeProduct(${index})">
								<i class="fas fa-trash"></i> Xóa
							</button>
						</td>
					</tr>
				`);
			});
		}

		function clearNewProductForm() {
			$('#newProductForm input, #newProductForm textarea, #newProductForm select').val('');
		}

		function clearExistingProductForm() {
			$('#existingMaSP').val('').trigger('change');
			$('#existingSoLuong, #existingGiaNhap').val('');
			$('#existingChiNhanh').val('');
		}

		function validateAndSubmitForm() {
			// Validate mã đơn nhập
			const maDN = $('input[name="MaDN"]').val();
			if (!maDN || maDN.trim() === '') {
				alert('Vui lòng nhập mã đơn nhập');
				return;
			}

			// Validate ngày nhập
			const ngayNhap = $('input[name="NgayNhap"]').val();
			if (!ngayNhap) {
				alert('Vui lòng chọn ngày nhập');
				return;
			}

			// Validate danh sách sản phẩm
			if (selectedProducts.length === 0) {
				alert('Vui lòng chọn ít nhất một sản phẩm');
				return;
			}

			const formData = new FormData();
			formData.append('maDN', maDN);
			formData.append('ngayNhap', ngayNhap);

			const newProducts = [];
			const existingProducts = [];

			selectedProducts.forEach(product => {
				if (product.type === 'new') {
					newProducts.push({
						MaSanPham: product.maSP,
						TenSanPham: product.tenSP,
						SoLuong: product.soLuong,
						NguyenGia: product.nguyenGia,
						GiaNhap: product.giaNhap,
						MaThuongHieu: product.maThuongHieu,
						ThongTinSanPham: product.thongTin,
						CongDungSanPham: product.congDung,
						ThanhPhanSanPham: product.thanhPhan,
						HuongDanSuDungSanPham: product.huongDan,
						XuatXu: product.xuatXu,
						MaChiNhanh: product.maChiNhanh
					});
				} else {
					existingProducts.push({
						MaSP: product.maSP,
						SoLuong: product.soLuong,
						GiaNhap: product.giaNhap,
						MaChiNhanh: product.maChiNhanh
					});
				}
			});

			formData.append('newProducts', JSON.stringify(newProducts));
			formData.append('existingProducts', JSON.stringify(existingProducts));

			console.log(newProducts)
		   console.log([...formData.entries()]);
			$.ajax({
				url: '@Url.Action("Create", "DonNhapHang")',
				type: 'POST',
				data: formData,
				processData: false,
				contentType: false,
				success: function(response) {
					if (response.success) {
						alert('Tạo đơn nhập hàng thành công');
						window.location.href = '@Url.Action("Index", "DonNhapHang")';
					} else {
						alert(response.message || 'Có lỗi xảy ra');
					}
				},
				error: function() {
					alert('Có lỗi xảy ra khi gửi yêu cầu');
				}
			});
		}
	</script>
}
